import { BasicTool } from "../basic.js";
/**
 * Zotero ReaderInstance APIs.
 */
export declare class ReaderTool extends BasicTool {
    /**
     * Get the selected tab reader.
     * @param waitTime Wait for n MS until the reader is ready
     */
    getReader(waitTime?: number): Promise<_ZoteroTypes.ReaderInstance | undefined>;
    /**
     * Get all window readers.
     */
    getWindowReader(): Array<_ZoteroTypes.ReaderWindow>;
    /**
     * Get Reader tabpanel deck element.
     * @deprecated - use item pane api
     * @alpha
     */
    getReaderTabPanelDeck(): XUL.Deck;
    /**
     * Add a reader tabpanel deck selection change observer.
     * @deprecated - use item pane api
     * @alpha
     * @param callback
     */
    addReaderTabPanelDeckObserver(callback: () => void): Promise<MutationObserver>;
    /**
     * Get the selected annotation data.
     * @param reader Target reader
     * @returns The selected annotation data.
     */
    getSelectedAnnotationData(reader: _ZoteroTypes.ReaderInstance): AnnotationData | undefined;
    /**
     * Get the text selection of reader.
     * @param reader Target reader
     * @returns The text selection of reader.
     */
    getSelectedText(reader: _ZoteroTypes.ReaderInstance): string;
}
interface AnnotationData {
    color?: string;
    pageLabel: string;
    position: Record<string, any>;
    sortIndex: string;
    text: string;
    type: _ZoteroTypes.Annotations.AnnotationType;
}
export {};
//# sourceMappingURL=reader.d.ts.map