/* eslint-disable eslint-comments/no-unlimited-disable */
/* eslint-disable */
import { ManagerTool } from "../basic.js";
import { PatchHelper } from "../helpers/patch.js";
/**
 * Item field hooks manager.
 */
export class FieldHookManager extends ManagerTool {
    data = {
        getField: {},
        setField: {},
        isFieldOfBase: {},
    };
    patchHelpers = {
        getField: new PatchHelper(),
        setField: new PatchHelper(),
        isFieldOfBase: new PatchHelper(),
    };
    constructor(base) {
        super(base);
        const _thisHelper = this;
        for (const type of Object.keys(this.patchHelpers)) {
            const helper = this.patchHelpers[type];
            helper.setData({
                target: this.getGlobal("Zotero").Item.prototype,
                funcSign: type,
                patcher: (original) => function (field, ...args) {
                    // @ts-ignore
                    const originalThis = this;
                    const handler = _thisHelper.data[type][field];
                    if (typeof handler === "function") {
                        try {
                            // @ts-ignore
                            return handler(field, args[0], args[1], originalThis, original);
                        }
                        catch (e) {
                            return field + String(e);
                        }
                    }
                    // @ts-ignore
                    return original.apply(originalThis, [field, ...args]);
                },
                enabled: true,
            });
        }
    }
    register(type, field, hook) {
        this.data[type][field] = hook;
    }
    unregister(type, field) {
        delete this.data[type][field];
    }
    unregisterAll() {
        this.data.getField = {};
        this.data.setField = {};
        this.data.isFieldOfBase = {};
        this.patchHelpers.getField.disable();
        this.patchHelpers.setField.disable();
        this.patchHelpers.isFieldOfBase.disable();
    }
}
//# sourceMappingURL=fieldHook.js.map