import e from"https";import t from"fs";import n from"path";import r from"os";import i from"semiff";function a(t,n=`latest`,r=3e4){let i=`https://registry.npmjs.org/-/package/${t}/dist-tags`;return new Promise((t,a)=>{let o=e.get(i,e=>{let r=``;e.on(`data`,e=>r+=e).on(`end`,()=>{try{let e=JSON.parse(r),i=e[n];i?t(i):a(Error(`Couldn't get version for dist-tag: ${n}`))}catch(e){a(e)}}).on(`error`,a)}),s=setTimeout(()=>{o.destroy(),a(Error(`Request timed out`))},r);o.on(`close`,()=>{clearTimeout(s)})})}const o=r.homedir();function s(e){let t=process.env.LOCALAPPDATA||n.join(o,`AppData`,`Local`);return n.join(t,e,`Cache`)}function c(e){return n.join(process.env.XDG_CACHE_HOME||n.join(o,`.cache`),e)}function l(e){return n.join(o,`Library`,`Caches`,e)}function u(e){switch(process.platform){case`win32`:return s(e);case`darwin`:return l(e);default:return c(e)}}var d=class{dir;fp;constructor(e){this.dir=u(`tiny-update-notifier`),this.fp=n.join(this.dir,`${e.name}`),t.existsSync(this.dir)||t.mkdirSync(this.dir,{recursive:!0})}async create(){if(t.existsSync(this.fp))try{let e=await this.read();if(e&&!isNaN(e))return}catch{await t.promises.unlink(this.fp)}await this.update()}async read(){return+await t.promises.readFile(this.fp,`utf8`)}async update(){await t.promises.writeFile(this.fp,``+Date.now(),`utf8`)}};async function f(e){if(!e||!e.pkg||!e.pkg.name||!e.pkg.version)throw Error(`pkg.name and pkg.version are required`);let t;if(e={cache:!0,checkInterval:60*60*24*1e3,...e},e.cache){t=new d(e.pkg);try{let n=await t.read();if(n+e.checkInterval>Date.now())return!1}catch{await t.create()}}let n=await a(e.pkg.name,e.distTag,e.timeout);await t?.update();let r=i(e.pkg.version,n);return r?{name:e.pkg.name,current:e.pkg.version,latest:n,type:r}:!1}export{f as default};